{"version":3,"sources":["challenge/pagination.js","challenge/table.js","challenge/useTable.js","dashboard/landingPage.js","App.js","reportWebVitals.js","index.js"],"names":["Pagination","totalRows","numberOfPage","doPaginate","currentPage","doPrev","doNext","style","display","justifyContent","class","onClick","color","map","pageNumber","Table","params","console","log","headers","rows","perPageCount","allowPagination","onRowClick","isFilterAllowed","onfilterData","startingPage","displayedRows","useState","currentpage","setPage","rowsPerPage","indexOfLastRow","indexOfFirstRow","currentRows","slice","totalPages","Math","ceil","length","Array","from","_","i","useTable","InputGroup","size","className","Text","id","FormControl","onChange","s","headerCheckBox","Form","Check","type","headerCheckEvent","title","subTitle","row","cell","content","defaultProps","undefined","LandingPage","props","getDatetime","Date","toDateString","greeting","curHr","getHours","onSideMenuClick","param","setState","contentTitle","onRowEdit","gridData","state","employeeData","find","isDisable","onRowDelete","filterdata","filter","rowCheckChange","e","ischeck","target","checked","empData","isChecked","getRows","d","name","includes","index","value","email","disabled","role","marginLeft","getHeaders","onHeaderCheckEvent","forEach","element","fetch","then","res","json","result","this","React","Component","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2581e374.chunk.js","sourcesContent":["import * as Icon from \"react-bootstrap-icons\";\r\nimport \"./pagination.css\";\r\n\r\nconst Pagination = ({\r\n  totalRows,\r\n  numberOfPage,\r\n  currentPage,\r\n  doPaginate,\r\n  doPrev,\r\n  doNext,\r\n}) => (\r\n  <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n    <div>\r\n      <p>\r\n        <span>{totalRows}</span> results\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <ul class=\"pagination\">\r\n        <li data-testid=\"prev-button\" onClick={doPrev}>\r\n          <Icon.CaretLeftFill color=\"royalblue\" />\r\n        </li>\r\n        {numberOfPage.map((pageNumber) => (\r\n          <li\r\n            data-testid=\"page-button\"\r\n            key={pageNumber}\r\n            onClick={() => doPaginate(pageNumber)}\r\n          >\r\n            <span>{pageNumber}</span>\r\n          </li>\r\n        ))}\r\n        <li data-testid=\"next-button\" onClick={doNext}>\r\n          <Icon.CaretRightFill color=\"royalblue\" />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { InputGroup, FormControl } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useTable } from \"./useTable\";\r\nimport Pagination from \"./pagination\";\r\nimport \"./table.css\";\r\n\r\nconst Table = (params) => {\r\n  console.log(\"params\", params);\r\n  const {\r\n    headers,\r\n    rows,\r\n    perPageCount,\r\n    allowPagination,\r\n    onRowClick,\r\n    isFilterAllowed,\r\n    onfilterData,\r\n    startingPage,\r\n  } = params;\r\n  // headers can have  {title, subTitle,headerCheckBox,headerCheckEvent className}\r\n  // onRowClick will return selected row\r\n\r\n  const {\r\n    rowsPerPage,\r\n    currentRows,\r\n    numberOfPage,\r\n    currentPage,\r\n    doPaginate,\r\n    doPrev,\r\n    doNext,\r\n  } = useTable(rows, startingPage, perPageCount);\r\n\r\n  return (\r\n    <div>\r\n      {isFilterAllowed && (\r\n        <InputGroup size=\"sm\" className=\"mb-3\">\r\n          <InputGroup.Text id=\"inputGroup-sizing-sm\">Search</InputGroup.Text>\r\n          <FormControl\r\n            aria-label=\"Small\"\r\n            aria-describedby=\"inputGroup-sizing-sm\"\r\n            onChange={onfilterData}\r\n          />\r\n        </InputGroup>\r\n      )}\r\n\r\n      <table className=\"table-container\">\r\n        <tr>\r\n          {headers.map((s) => {\r\n            return (\r\n              <th>\r\n                {!s.headerCheckBox ? (\r\n                  <div className=\"header-Cell\">\r\n                    <div>{s.title}</div>\r\n                    {s.subTitle && <div>{s.subTitle}</div>}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <Form>\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        onChange={s.headerCheckEvent}\r\n                      />\r\n                    </Form>\r\n                  </div>\r\n                )}\r\n              </th>\r\n            );\r\n          })}\r\n        </tr>\r\n        {currentRows.map((row) => (\r\n          <tr onClick={onRowClick ? onRowClick(row) : null}>\r\n            {row.map((cell) => (\r\n              <td>{cell.content}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </table>\r\n\r\n      {allowPagination && rows.length > rowsPerPage && (\r\n        <Pagination\r\n          numberOfPage={numberOfPage}\r\n          totalRows={rows.length}\r\n          currentPage={currentPage}\r\n          doPaginate={doPaginate}\r\n          doPrev={doPrev}\r\n          doNext={doNext}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nTable.defaultProps = {\r\n  startingPage: 1,\r\n  perPageCount: 10,\r\n  onRowClick: undefined,\r\n};\r\n\r\nexport default Table;\r\n","import { useState } from 'react'\r\n\r\nexport const useTable = (rows, startingPage, displayedRows) => {\r\n  const [currentpage, setPage] = useState(startingPage)\r\n  const [rowsPerPage] = useState(displayedRows)\r\n\r\n  const indexOfLastRow = currentpage * rowsPerPage\r\n  const indexOfFirstRow = indexOfLastRow - rowsPerPage\r\n  const currentRows = rows.slice(indexOfFirstRow, indexOfLastRow)\r\n  const totalPages = Math.ceil(rows.length / rowsPerPage)\r\n  const numberOfPage = Array.from({ length: totalPages }, (_, i) => i + 1)\r\n\r\n  const doPaginate = pageNumber => setPage(pageNumber)\r\n  const doPrev = () => {\r\n    if (currentpage > 1) {\r\n      setPage(currentpage - 1)\r\n    }\r\n  }\r\n  const doNext = () => {\r\n    if (currentpage < totalPages) {\r\n      setPage(currentpage + 1)\r\n    }\r\n  }\r\n\r\n  return { rowsPerPage, currentRows, totalPages, numberOfPage, currentpage, doPaginate, doPrev, doNext }\r\n}\r\n","import React from \"react\";\r\nimport Table from \"../challenge/table\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport \"./landing.css\";\r\n\r\nexport default class LandingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      employeeData: [],\r\n      filter: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        if (result && result.length > 0) {\r\n          result.forEach((element) => {\r\n            element.isDisable = true;\r\n          });\r\n\r\n          this.setState({\r\n            employeeData: result,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            employeeData: [],\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  getDatetime = () => {\r\n    const date = new Date();\r\n    return date.toDateString();\r\n  };\r\n\r\n  greeting = () => {\r\n    var today = new Date();\r\n    var curHr = today.getHours();\r\n\r\n    return curHr < 12\r\n      ? \"Good morning\"\r\n      : curHr < 18\r\n      ? \"Good afternoon\"\r\n      : \"Good evening\";\r\n  };\r\n\r\n  onSideMenuClick = (param) => {\r\n    this.setState({ contentTitle: param });\r\n  };\r\n\r\n  onRowEdit = (row) => {\r\n    const gridData = this.state.employeeData;\r\n\r\n    const filterdata = gridData.find((s) => s.id === row.id);\r\n    filterdata.isDisable = false;\r\n\r\n    this.setState({\r\n      employeeData: gridData,\r\n    });\r\n  };\r\n\r\n  onRowDelete = (row) => {\r\n    const gridData = this.state.employeeData;\r\n    const filterdata = gridData.filter((s) => s.id !== row.id);\r\n    this.setState({\r\n      employeeData: filterdata,\r\n    });\r\n  };\r\n\r\n  rowCheckChange = (e) => (row) => {\r\n    const ischeck = e.target.checked;\r\n    const empData = this.state.employeeData;\r\n    const selectedRow = empData.filter((s) => s.id === row.id)[0];\r\n    selectedRow.isChecked = ischeck;\r\n\r\n    this.setState({\r\n      employeeData: empData,\r\n    });\r\n  };\r\n\r\n  getRows = () => {\r\n    const { employeeData, filter } = this.state;\r\n\r\n    const dataToShow = filter\r\n      ? employeeData.filter((d) => d.name.includes(filter))\r\n      : employeeData;\r\n\r\n    return dataToShow.map((s, index) => {\r\n      return [\r\n        {\r\n          content: (\r\n            <div>\r\n              <Form>\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  checked={s.isChecked}\r\n                  onChange={(e) => this.rowCheckChange(e)(s)}\r\n                />\r\n              </Form>\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          content: <div>{s.name}</div>,\r\n        },\r\n        {\r\n          content: (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={s.email}\r\n                disabled={s.isDisable}\r\n              />\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          content: (\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"role\"\r\n                name=\"role\"\r\n                value={s.role}\r\n                disabled={s.isDisable}\r\n              />\r\n            </div>\r\n          ),\r\n        },\r\n        {\r\n          content: (\r\n            <div>\r\n              <button onClick={() => this.onRowEdit(s)}>\r\n                <Icon.PencilSquare />\r\n              </button>\r\n              <span style={{ marginLeft: \"2px\" }}>\r\n                <button onClick={() => this.onRowDelete(s)}>\r\n                  <Icon.Trash />\r\n                </button>\r\n              </span>\r\n            </div>\r\n          ),\r\n        },\r\n      ];\r\n    });\r\n  };\r\n\r\n  getHeaders = () => {\r\n    return [\r\n      {\r\n        title: \"#\",\r\n        headerCheckBox: true,\r\n        headerCheckEvent: this.onHeaderCheckEvent,\r\n      },\r\n      {\r\n        title: \"Name\",\r\n        // subTitle: \"Duration\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        // subTitle: \"2004-2006\",\r\n      },\r\n      {\r\n        title: \"Role\",\r\n        // subTitle: \"2004-2006\",\r\n      },\r\n      {\r\n        title: \"\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  onHeaderCheckEvent = (e) => {\r\n    // console.log(\"onHeaderCheckEvent\", e.target.checked);\r\n    // alert(`Header checkbox is selected ${e.target.checked}`);\r\n    const ischeck = e.target.checked;\r\n    const empData = this.state.employeeData;\r\n    empData.forEach((element) => {\r\n      element.isChecked = ischeck;\r\n    });\r\n\r\n    this.setState({\r\n      employeeData: empData,\r\n    });\r\n  };\r\n\r\n  onRowClick = (row) => {\r\n    // console.log(\"onRowClick\", row);\r\n  };\r\n\r\n  onfilterData = (param) => {\r\n    // console.log(\"onfilterData\", param.target.value);\r\n    this.setState({ filter: param.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"page-Layout\">\r\n          <div class=\"item1\">\r\n            <div>{this.greeting()}</div>\r\n            <div>Building Table Control</div>\r\n            <div>\r\n              I am Deeptanshu Belwal, Full Stack Developer, Bangalore, India\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"item2\">\r\n            <Table\r\n              headers={this.getHeaders()}\r\n              rows={this.getRows()}\r\n              perPageCount={10}\r\n              onRowClick={this.onRowClick()}\r\n              isFilterAllowed={true}\r\n              onfilterData={this.onfilterData}\r\n              allowPagination={true}\r\n            ></Table>\r\n          </div>\r\n          <div class=\"item3\">© copyright by db-Square</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LandingPage from \"./dashboard/landingPage\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}